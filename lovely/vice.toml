[manifest]
version = "0.0.1"
dump_lua = true
priority = 999

## vice's fx: make showdown blinds appear twice as frequent
[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''elseif not v.boss.showdown and (v.boss.min <= math.max(1, G.GAME.round_resets.ante) and ((math.max(1, G.GAME.round_resets.ante))%G.GAME.win_ante ~= 0 or G.GAME.round_resets.ante < 2)) then
    eligible_bosses[k] = true
elseif v.boss.showdown and (((G.GAME.round_resets.ante)%G.GAME.win_ante == 0 and G.GAME.round_resets.ante >= 2) or G.GAME.modifiers.cry_big_showdown ) then
    eligible_bosses[k] = true
end'''
position = 'at'
payload = '''
elseif not v.boss.showdown and (v.boss.min <= math.max(1, G.GAME.round_resets.ante) and ((math.max(1, G.GAME.round_resets.ante))%math.ceil(G.GAME.win_ante/G.GAME.unik_vice_squeeze) ~= 0 or G.GAME.round_resets.ante < 2)) then
    eligible_bosses[k] = true
elseif v.boss.showdown and (((G.GAME.round_resets.ante)%math.ceil(G.GAME.win_ante/G.GAME.unik_vice_squeeze) == 0 and G.GAME.round_resets.ante >= 2) or G.GAME.modifiers.cry_big_showdown ) then
    eligible_bosses[k] = true
end
--The epic vice's effect
if G.GAME.unik_force_epic_plus > 0 then
    if v.boss and v.boss.epic and string.sub(k,1,6) == "bl_jen" then
        eligible_bosses[k] = true
    elseif v.boss and (v.boss.epic or v.boss.legendary) then
        local res, options = v:in_pool()
        eligible_bosses[k] = res and true or nil
    elseif v.boss then
        eligible_bosses[k] = nil
    end
end
'''
match_indent = true

# in_pool fix: enable bosses that have in_pool to spawn when finishers are enabled or the vice causes them to spawn everywhere
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if
                (
                    ((G.GAME.round_resets.ante)%G.GAME.win_ante == 0 and G.GAME.round_resets.ante >= 2) ==
                    (v.boss.showdown or false)
                ) or
                (options or {}).ignore_showdown_check
            then'''
position = "at"
payload = '''
            if
                (
                    (((G.GAME.round_resets.ante)%(math.ceil(G.GAME.win_ante/G.GAME.unik_vice_squeeze)) == 0 and G.GAME.round_resets.ante >= 2) ) ==
                    (v.boss.showdown or false)
                ) or
                (options or {}).ignore_showdown_check or G.GAME.modifiers.cry_big_showdown
            then
'''
match_indent = true

# If the next boss is epic+, decrement
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''return boss'''
position = "before"
payload = '''
    if (G.P_BLINDS[boss].boss and (G.P_BLINDS[boss].boss.epic or G.P_BLINDS[boss].boss.legendary)) and G.GAME.unik_force_epic_plus and G.GAME.unik_force_epic_plus > 0 then
        G.GAME.unik_force_epic_plus = G.GAME.unik_force_epic_plus - 1
        print(G.GAME.unik_force_epic_plus)
    end
'''
match_indent = true

# UUntil no more blinds are left, force the next X blinds to be epic+
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''else
            G.GAME.round_resets.blind_choices.Big = 'bl_big''''
position = "before"
payload = '''
elseif G.GAME.unik_force_epic_plus > 0 then
    G.GAME.round_resets.blind_choices.Big = get_new_boss()
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if G.GAME.modifiers.cry_big_boss_rate and pseudorandom('cry_big_boss') < G.GAME.modifiers.cry_big_boss_rate then'''
position = "before"
payload = '''
if G.GAME.unik_force_epic_plus > 0 and not G.GAME.modifiers.cry_rush_hour_ii and not G.GAME.modifiers.cry_no_small_blind then
    G.GAME.round_resets.blind_choices.Small = get_new_boss()
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''else
            G.GAME.round_resets.blind_choices.Big = 'bl_big''''
position = "before"
payload = '''
elseif G.GAME.unik_force_epic_plus > 0 then
    G.GAME.round_resets.blind_choices.Big = get_new_boss()
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''if G.GAME.modifiers.cry_big_boss_rate and pseudorandom('cry_big_boss') < G.GAME.modifiers.cry_big_boss_rate then'''
position = "after"
payload = '''
if G.GAME.unik_force_epic_plus > 0 and not G.GAME.modifiers.cry_rush_hour_ii and not G.GAME.modifiers.cry_no_small_blind then
    G.GAME.round_resets.blind_choices.Small = get_new_boss()
end
'''
match_indent = true