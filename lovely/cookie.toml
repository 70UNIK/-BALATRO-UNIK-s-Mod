[manifest]
version = "0.0.1"
dump_lua = true
priority = 999

##The cookie: Obsidian orb compat

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/blind.lua"]'''
pattern = '''cry_ante_base_mod = function(self, dt)
		local mod = 0'''
position = "before"
payload = '''
	unik_clicky_click_mod = function(self)
		local mod = {0,-1}
		for k, _ in pairs(G.GAME.defeated_blinds) do
			s = G.P_BLINDS[k]
			if s.unik_clicky_click_mod then
				if s:unik_clicky_click_mod(true)[2] <= -1 then
					mod[1] = mod[1] + s:unik_clicky_click_mod(false)[1]
				elseif s:unik_clicky_click_mod(true)[2] <= 0 then
					if mod[1] <= 0 then
						mod[1] = 1
					end
					mod[1] = mod[1] * s:unik_clicky_click_mod(false)[1]
				else
					if mod[1] <= 0 then
						mod[1] = 1
					end
					mod[1] = mod[1] * s:unik_clicky_click_mod(false)[1]
					mod[2] = s:unik_clicky_click_mod(true)[2]
				end
			end
		end
		return mod
	end,
	unik_debuff_after_hand = function(self,poker_hands, scoring_hand,cards, check,mult,hand_chips,sum)
		local debuff2 = true
		local add_to_blind2 = 0
		local mult2 = mult
		local chips2 = hand_chips
		for k, _ in pairs(G.GAME.defeated_blinds) do
			s = G.P_BLINDS[k]
			if s.unik_debuff_after_hand then
				local struct = s:unik_debuff_after_hand(poker_hands, scoring_hand,cards, check,mult,hand_chips,sum)
				if struct.debuff then
					if struct.debuff == true then
						debuff2 = true
					end
				end
				if struct.add_to_blind then
					add_to_blind2 = add_to_blind2 + struct.add_to_blind
				end
				if struct.mod_mult then
					mult2 = struct.mod_mult 
				end
				if struct.mod_chips then
					chips2 = struct.mod_chips
				end
			end
		end
		return {
            debuff = debuff2,
			mod_mult = mult2,
            mod_chips = hand_chips2,
			add_to_blind = add_to_blind2,
        }
	end,
	unik_after_defeat = function(self,chips,blind_size)
		local bool = false
		for k, _ in pairs(G.GAME.defeated_blinds) do
			s = G.P_BLINDS[k]
			if s.unik_after_defeat then
				if s:unik_after_defeat(chips,blind_size) then
					bool = true
				end
			end
		end
		return bool
	end,
	
'''
match_indent = true