[manifest]
version = "0.0.1"
dump_lua = true
priority = 999

# initial rarity initializer
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''G.ARGS.TEMP_POOL = EMPTY(G.ARGS.TEMP_POOL)'''
position = "after"
payload = '''
local rarity2 = nil
'''
match_indent = true
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''local rarity = _rarity or SMODS.poll_rarity("Joker", 'rarity'..G.GAME.round_resets.ante..(_append or ''))'''
position = "after"
payload = '''
rarity2 = rarity
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = 'if add and not G.GAME.banned_keys[v.key] then'
position = "after"
payload = '''
local clonemen = {}
if G.jokers and G.jokers.cards then
    for i,v in pairs(G.jokers.cards) do
        if v.config.center.key == 'j_unik_cloneman' and not v.debuff then
            clonemen[#clonemen + 1] = math.min(v.ability.immutable.max_multiplier, v.ability.extra.multiplier)
        end
    end
end

if G.jokers and G.jokers.cards and _type == 'Joker' and rarity2 ~= nil then
    for i,v in pairs(G.jokers.cards) do
        if v.config.center.key ~= 'j_unik_cloneman' and v.config.center.rarity == rarity2 then
            for i = 1, #clonemen do
                for j = 1, math.floor(clonemen[i]) do
                    _pool[#_pool + 1] = v.config.center.key
                    _pool_size = _pool_size + 1
                end
            end
        end
    end
end
if G.consumeables and G.consumeables.cards and _type ~= nil then
    for i,v in pairs(G.consumeables.cards) do

        if v.ability.set == _type then
            for i = 1, #clonemen do
                for j = 1, math.floor(clonemen[i]) do
                    _pool[#_pool + 1] = v.config.center.key
                    _pool_size = _pool_size + 1
                end
            end
        end
    end
end
--Pools (meme, M, food)
if G.consumeables and G.consumeables.cards and G.jokers and G.jokers.cards and _type ~= nil then
    for i,v in pairs(G.jokers.cards) do
        if Cryptid.safe_get(v.config.center, "pools", _type) then
            for i = 1, #clonemen do
                for j = 1, math.floor(clonemen[i]) do
                    _pool[#_pool + 1] = v.config.center.key
                    _pool_size = _pool_size + 1
                end
            end
        end
    end
    for i,v in pairs(G.consumeables.cards) do
        if Cryptid.safe_get(v.config.center, "pools", _type) then
            for i = 1, #clonemen do
                for j = 1, math.floor(clonemen[i]) do
                    _pool[#_pool + 1] = v.config.center.key
                    _pool_size = _pool_size + 1
                end
            end
        end
    end
end
'''
match_indent = true