[manifest]
version = "0.0.1"
dump_lua = true
priority = 999

# Patch into cryptid to force happiness to be positive in a reliable way
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "lib/overrides.lua"]'''
pattern = '''if card.ability.name == "cry-universe" then
		card:set_edition("e_cry_astral", true, nil, true)
	end'''
position = "after"
payload = '''
if card.ability.name == "j_unik_happiness" then
    card:set_edition("e_unik_positive", true, nil, true)
end
if (card.ability.name == "j_unik_foundation" and (#SMODS.find_card("j_jen_saint_attuned")) > 0) then
    card:set_edition("e_negative", true, nil, true)
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "lib/overrides.lua"]'''
pattern = '''and card.ability.name ~= "cry-universe"'''
position = "after"
payload = '''and card.ability.name ~= "j_unik_happiness"
and (card.ability.name ~= "j_unik_foundation" and (#SMODS.find_card("j_jen_saint_attuned")) > 0)
'''
match_indent = true

## POSITIVE consumable and playing card label logic

### Badge
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "if v == 'negative_consumable' or v == 'negative_playing_card' then v = 'negative' end"
position = "after"
payload = '''
if v == 'unik_positive_consumable' or v == 'unik_positive_playing_card' then v = 'unik_positive' end
'''
match_indent = true

### 
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if v:sub(1,9) == 'negative_' then
    info_queue[#info_queue+1] = {key = 'e_'..v, set = 'Edition', config = {extra = G.P_CENTERS['e_negative'].config.card_limit}}
end'''
position = "after"
payload = '''if v:sub(1,14) == 'unik_positive_' then
    info_queue[#info_queue+1] = {key = 'e_'..v, set = 'Edition', config = {extra = G.P_CENTERS['e_unik_positive'].config.card_limit}}
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "badges[#badges + 1] = 'negative_playing_card'"
position = "after"
payload = """
elseif self.edition.type == 'unik_positive' and self.ability.consumeable then
    badges[#badges + 1] = 'unik_positive_consumable'
elseif self.edition.type == 'unik_positive' and (self.ability.set == 'Enhanced' or self.ability.set == 'Default') then
    badges[#badges + 1] = 'unik_positive_playing_card'"""
match_indent = true

### Bad edition colors: Instead of a blueshift, its a redshift, just to show how shitty it is

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.C.DARK_EDITION[2] = math.min(self.C.DARK_EDITION[3], self.C.DARK_EDITION[1])"
position = "after"
payload = """--self.C.UNIK_SHITTY_EDITION[3] = 0.6+0.2*math.sin(self.TIMERS.REAL*1.3)
        self.C.UNIK_SHITTY_EDITION[1] = 0.6+0.2*(1- math.sin(self.TIMERS.REAL*1.3))
        --self.C.UNIK_SHITTY_EDITION[4] = 0.6-0.2*(1- math.sin(self.TIMERS.REAL*1.3))
        self.C.UNIK_SHITTY_EDITION[2] = math.min(self.C.DARK_EDITION[1], self.C.DARK_EDITION[2])"""
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.C.DARK_EDITION[2] = math.min(self.C.DARK_EDITION[3], self.C.DARK_EDITION[1])"
position = "after"
payload = """--self.C.UNIK_SYNC_CATALYST_FAIL[1] = 0.6+0.2*math.sin(self.TIMERS.REAL*1.3)
        self.C.UNIK_SYNC_CATALYST_FAIL[3] = 0.6+0.2*(1- math.sin(self.TIMERS.REAL*1.3))
        self.C.UNIK_SYNC_CATALYST_FAIL[2] = math.min(self.C.UNIK_SYNC_CATALYST_FAIL[1], self.C.UNIK_SYNC_CATALYST_FAIL[3])
        
        self.C.UNIK_LARTCEPS1[1] = 0.5+0.6*(1- math.sin(self.TIMERS.REAL*5))
        self.C.UNIK_LARTCEPS1[2] = 0.5+0.6*math.sin(self.TIMERS.REAL*5)
        self.C.UNIK_LARTCEPS1[3] = 0.5+0.6*math.sin(self.TIMERS.REAL*5)

        self.C.UNIK_LARTCEPS_INVERSE[1] = 0.5+0.6*math.sin(self.TIMERS.REAL*5)
        self.C.UNIK_LARTCEPS_INVERSE[2] = 0.5+0.6*(1- math.sin(self.TIMERS.REAL*5))
        self.C.UNIK_LARTCEPS_INVERSE[3] = 0.5+0.6*(1- math.sin(self.TIMERS.REAL*5))
        self.C.SECONDARY_SET.unik_lartceps = self.C.UNIK_LARTCEPS1
        
"""
match_indent = true


[[patches]]
[patches.pattern]
target = "globals.lua"
pattern = "DARK_EDITION = {0,0,0,1},"
position = "after"
payload = """UNIK_SHITTY_EDITION = {0,0,0,1},
UNIK_LARTCEPS1 = {1,0,0,1},
UNIK_LARTCEPS_INVERSE = {1,0,0,1},
UNIK_THE_PLANT = HEX('709284'),
UNIK_THE_MANACLE = HEX('575757'),
UNIK_THE_WALL = HEX('8a59a5'),
UNIK_THE_GOAD = HEX('b95c96'),
UNIK_THE_WINDOW = HEX('a9a295'),
UNIK_THE_CLUB = HEX('b9cb92'),
UNIK_THE_HEAD = HEX('ac9db4'),
UNIK_THE_ARM = HEX('6865f3'),
UNIK_THE_HOOK = HEX('a84024'),
UNIK_ORTA_THE_HAMMER = HEX('6a3847'),
UNIK_MAYA = HEX('ff00ab'),
UNIK_YOKANA = HEX('86cafe'),
UNIK_CHELSEA = HEX('d298fd'),
UNIK_EYE_SEARING_BLUE = HEX('0000ff'),
UNIK_SYNC_CATALYST_FAIL = {0,0,0,1},
UNIK_VOID_COLOR = HEX('000000'),
UNIK_EYE_SEARING_RED= HEX('ff0000'),
UNIK_UNIK = HEX('fe90ff'),
UNIK_CAPTION = HEX('009A9A'),
"""
match_indent = true


[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "dark_edition = G.C.DARK_EDITION,"
position = "after"
payload = """unik_shitty_edition = G.C.UNIK_SHITTY_EDITION,
unik_plant_color = G.C.UNIK_THE_PLANT,
unik_manacle_color = G.C.UNIK_THE_MANACLE,
unik_wall_color = G.C.UNIK_THE_WALL,
unik_goad_color = G.C.UNIK_THE_GOAD,
unik_window_color = G.C.UNIK_THE_WINDOW,
unik_club_color = G.C.UNIK_THE_CLUB,
unik_head_color = G.C.UNIK_THE_HEAD,
unik_arm_color = G.C.UNIK_THE_ARM,
unik_hook_color = G.C.UNIK_THE_HOOK,
unik_orta_hammer_color = G.C.UNIK_ORTA_THE_HAMMER,
unik_eye_searing_blue = G.C.UNIK_EYE_SEARING_BLUE,
unik_eye_searing_red = G.C.UNIK_EYE_SEARING_RED,
unik_void_color = G.C.UNIK_VOID_COLOR,
unik_maya_color = G.C.UNIK_MAYA,
unik_yokana_color = G.C.UNIK_YOKANA,
unik_chelsea_color = G.C.UNIK_CHELSEA,
unik_unik_color = G.C.UNIK_UNIK,
unik_caption = G.C.UNIK_CAPTION,
unik_lartceps1 = G.C.UNIK_LARTCEPS1,
unik_lartceps_inverse = G.C.UNIK_LARTCEPS_INVERSE,
"""
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/enhanced.lua"]'''
pattern = '''polychrome = { atlas = "cry_atlaseditiondeck", pos = { x = 2, y = 0 } },'''
position = "after"
payload = '''
unik_positive = { atlas = "unik_edition_deck", pos = { x = 0, y = 0 } },'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/enhanced.lua"]'''
pattern = '''cry_flickering = { atlas = "cry_atlasdeck", pos = { x = 6, y = 2 } },'''
position = "after"
payload = '''
unik_depleted = { atlas = "unik_sticker_deck", pos = { x = 0, y = 0 } },
unik_disposable = { atlas = "unik_sticker_deck", pos = { x = 1, y = 0 } },
unik_niko = { atlas = "unik_sticker_deck", pos = { x = 2, y = 0 } },
unik_impounded = { atlas = "unik_sticker_deck", pos = { x = 0, y = 1 } },'''
match_indent = true
