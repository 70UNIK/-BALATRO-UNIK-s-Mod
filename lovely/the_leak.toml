[manifest]
version = "0.0.1"
dump_lua = true
priority = 999

###The leak functionality -- disable plasma effect + say "Not Balanced!"

[[patches]]
[patches.pattern]
target = 'back.lua'
pattern = '''if (self.name == 'Plasma Deck') and args.context == 'final_scoring_step' then'''
position = 'before'
payload = '''
--The leak functionality: Goes before plasma deck functionality
if self.name == 'Plasma Deck' and args.context == 'final_scoring_step' and G.GAME.unik_disable_catalyst then
G.E_MANAGER:add_event(Event({
    func = (function()
        local text = localize('k_unik_plasma_deck_fail')
        attention_text({
            scale = 1.4, text = text, hold = 2, align = 'cm', offset = {x = 0,y = -2.7},major = G.play
        })
        G.GAME.blind.triggered = true
        G.HUD_blind:get_UIE_by_ID('HUD_blind_debuff_1'):juice_up(0.3, 0)
        G.HUD_blind:get_UIE_by_ID('HUD_blind_debuff_2'):juice_up(0.3, 0)
        G.GAME.blind:wiggle()
        G.ROOM.jiggle = G.ROOM.jiggle + 3
        return true
    end)
}))
    delay(0.6)
    return args.chips, args.mult
end
'''
match_indent = true

### Plasma sleeve -- disable plasma effect + say "Not Balanced!"
[[patches]]
[patches.pattern]
target = '''=[SMODS CardSleeves "CardSleeves.lua"]'''
pattern = '''if self.get_current_deck_key() ~= "b_plasma" and context.context == 'final_scoring_step' then'''
position = 'before'
payload = '''
if self.get_current_deck_key() ~= "b_plasma" and context.context  == 'final_scoring_step' and G.GAME.unik_disable_catalyst then
G.E_MANAGER:add_event(Event({
    func = (function()
        local text = localize('k_unik_plasma_deck_fail')
        attention_text({
            scale = 1.4, text = text, hold = 2, align = 'cm', offset = {x = 0,y = -2.7},major = G.play
        })
        G.GAME.blind.triggered = true
        G.GAME.blind:wiggle()
        if
            G.HUD_blind
            and G.HUD_blind:get_UIE_by_ID("HUD_blind_debuff_1")
            and G.HUD_blind:get_UIE_by_ID("HUD_blind_debuff_2")
        then
            G.HUD_blind:get_UIE_by_ID("HUD_blind_debuff_1"):juice_up(0.3, 0)
            G.HUD_blind:get_UIE_by_ID("HUD_blind_debuff_2"):juice_up(0.3, 0)
        end
        G.ROOM.jiggle = G.ROOM.jiggle + 3
        return true
    end)
}))
    delay(0.6)
    return context.chips, context.mult
end
'''
match_indent = true


### Sync catalyst will have a finisher blind bg to reflect the fact that chips and mult do not balance (hence red and blue)
### Other custom BGs go here.
### Legendary Blinds will instead be searing red and black, reflecting it's satanic nature

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''if v.boss.showdown then'''
position = 'at'
payload = '''
--video poker has the blue bg
if blindname == "bl_unik_video_poker" then
    ease_background_colour{new_colour = G.C.UNIK_EYE_SEARING_BLUE , special_colour = G.C.UNIK_EYE_SEARING_BLUE , contrast = 0.3}
    return
--sync catalyst will have a mixture of red blue and purple
elseif blindname == "bl_unik_sync_catalyst_fail" then
    ease_background_colour{new_colour = G.C.BLUE, special_colour = G.C.PURPLE, tertiary_colour = G.C.RED, contrast = 3}
    return
-- If the blind is a legendary
elseif v.boss.legendary then
    ease_background_colour{new_colour = G.C.UNIK_VOID_COLOR, special_colour = G.C.UNIK_EYE_SEARING_RED, tertiary_colour = G.C.UNIK_VOID_COLOR, contrast = 3}
    return
-- If the blind is a showdown
elseif v.boss.showdown then'''
match_indent = true